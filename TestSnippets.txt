C 
==

#include<stdio.h>
int main()
{
    printf("Hello World from C");
        return 0;
}

#include<stdio.h>
int main()
{
        int a , b, c ;
        scanf("%d",&a);
        scanf("%d",&b);
        c = a + b ;
        printf("%d",c);
        return 0;
}

@@@@@@@@@@@@@@@@@@@@@@@@

C++
===
#include<iostream>
using namespace std;
int main()
{
    cout<<"Hello World from C++";   
    return 0;
}

#include<iostream>
using namespace std;
int main()
{
    int a , b, c ;
    cin>>a;
    cin>>b;
    c = a + b ;
    cout<<c;
    return 0;
}

@@@@@@@@@@@@@@@@@@@@@@@@

Java
====
class Main
{
public static void main(String[] args)
{
System.out.println("Hello World");
}
}


import java.util.*;
public class Main {
 
  public static void main(String[] args) {        
        String a = new String();
        Scanner x = new Scanner(System.in );
        a = x.next();
        System.out.println(a);
            
 
    }
 
}

@@@@@@@@@@@@@@@@@@@@@@@@

Python
======
print "hello world"

a = int(raw_input("Enter a value "))
b = int(raw_input("Enter b value "))
c = a+b
print c
s = [3,4,5]
ss = map(lambda x: x*x, s)
print('_'.join(map(str, ss)))


@@@@@@@@@@@@@@@@@@@@@@@@

C#
==

using System;

namespace Main
{
    class Program
    {
        static void Main(string[] args)
        {
            int a =  Int16.Parse(Console.ReadLine());
            int b = Int16.Parse(Console.ReadLine());
            int c = a + b;
            Console.WriteLine("The answer is {0} " , c );
        }
    }
}


@@@@@@@@@@@@@@@@@@@@@@@@

VB
==

Module Module1

Sub Main()
Console.WriteLine("Hello World")
End Sub

End Module 

Module Module1

    Sub Main()
        Dim a As Integer
        Dim b As Integer
        Dim c As Integer
        a = Console.ReadLine()
        b = Console.ReadLine()
        c = a + b
        Console.WriteLine("c value is " & c.ToString())

    End Sub

End Module

@@@@@@@@@@@@@@@@@@@@@@@@

Node.js
==

console.log("Hello World by js");


/*process.stdin.setEncoding('utf8');

process.stdin.on('readable', () => {
  var chunk = process.stdin.read();
  if (chunk !== null) {
    process.stdout.write(`data: ${chunk}`);
  }
});

process.stdin.on('end', () => {
  process.stdout.write('end');
});*/

const readline = require('readline');

const rl = readline.createInterface({
  input: process.stdin,
  output: process.stdout
});

var inputs = [];

rl.on('line', (cmd) => {
  var tmp = cmd.trim().split(' ');  //去掉两边的空白符，防止中间还有空格，分割之
  for(var i = 0; i < tmp.length; i++){
    if(tmp[i] !== '') inputs.push(tmp[i]);
  }
}).on('close', (cmd) =>{
    console.log(`You just typed: ${inputs}, average is ${average(inputs)}`);
    process.exit(0);
});

function average(arr){
  var sum = arr.reduce((a, b) => { return parseInt(a) + parseInt(b); });
  return avg = sum / arr.length;
}

console.log(process.argv);

var s = [3,4,5];
var ss = s.map((e)=>e*e);
console.log(ss.join("_"));